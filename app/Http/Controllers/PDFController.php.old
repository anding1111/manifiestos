<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Imei;
use Smalot\PdfParser\Parser as PdfParser;
use Carbon\Carbon;
use Illuminate\Support\Str;

class PDFController extends Controller
{
    public function upload(Request $request)
    {
        $request->validate([
            'file' => 'required|mimes:pdf|max:2048',
        ]);

        $file = $request->file('file');
        $fileName = Carbon::now()->format('Ymd_His') . '_' . Str::upper(Str::random(3)) . '.pdf';
        $filePath = $file->storeAs('uploads', $fileName);

        $pdfText = $this->extractTextFromPDF(storage_path('app/' . $filePath));
        
        // Patrón para encontrar números de 15 dígitos (IMEI) ignorando saltos de línea
        $pattern = '/\b\d{15}\b/s'; 
        $pdfText = preg_replace("/\s+/", "", $pdfText); // Eliminar espacios y saltos de línea
        preg_match_all($pattern, $pdfText, $matches);
        
        $foundImeis = $matches[0];

        foreach ($foundImeis as $imei) {
            Imei::create([
                'name_pdf' => $fileName,
                'imei' => $imei,
                'created_at' => Carbon::now(),
                'updated_at' => Carbon::now(),
            ]);
        }

        return back()->with('message', 'Archivo subido y procesado exitosamente.');
    }

    private function extractTextFromPDF($filePath)
    {
        $parser = new PdfParser();
        $pdf = $parser->parseFile($filePath);
        $text = $pdf->getText();
        return $text;
    }
}
